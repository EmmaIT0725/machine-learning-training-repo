# -*- coding: utf-8 -*-
"""필수과제2_강민지28.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OppuxLJcV5yeWhg4F7EZiIGtB4BMumh-
"""

'''
필수과제2

    남성과 여성의 fare 단순한 평균으로 진행
    남성과 여성에 따른, 10대 미만, 10대, 20대와 30대 그리고 나머지 그외에 따라서 fare 평균 값 파생변수 만들기!
'''

import seaborn as sns
import numpy as np
import pandas as np

dt = sns.load_dataset('titanic')

dt

fe_fare_mean = dt.query('''sex == "female"''')['fare'].mean()
# query는 ()사용함
fe_fare_mean

ma_fare_mean = dt.query('''sex == "male"''')['fare'].mean()
## query는 ()사용함
ma_fare_mean

dt.query('''sex == "female" and age < 10''')
dt.query('''sex == "female" and 10<= age < 20''')
dt.query('''sex == "female" and 20<= age < 30''')
dt.query('''sex == "female" and 30<= age < 40''')
dt.query('''sex == "female" and age >= 40''')

fema_fare0 = dt.query('''sex == "female" and age < 10''')['fare'].mean()
fema_fare0

fema_fare10 = dt.query('''sex == "female" and 10<= age < 20''')['fare'].mean()
fema_fare10

fema_fare20 = dt.query('''sex == "female" and 20<= age < 30''')['fare'].mean()
fema_fare20

fema_fare30 = dt.query('''sex == "female" and 30<= age < 40''')['fare'].mean()
fema_fare30

fema_fare40s = dt.query('''sex == "female" and age >= 40''')['fare'].mean()
fema_fare40s

dt['fe_fare_mean0'] = 0 # 새로운 열 생성 & 초깃값 생성
dt['fe_fare_mean10'] = 0
dt['fe_fare_mean20'] = 0
dt['fe_fare_mean30'] = 0
dt['fe_fare_mean40s'] = 0
dt['ma_fare_mean0'] = 0 # 새로운 열 생성 & 초깃값 생성
dt['ma_fare_mean10'] = 0
dt['ma_fare_mean20'] = 0
dt['ma_fare_mean30'] = 0
dt['ma_fare_mean40s'] = 0

dt

# dt['sex'] == 'female'
# False / True 로 값 도출
# 위의 조건을 만족하는 모든 값 도출

dt['sex'].loc() == 'female'
# 각 행을 도출

# query 받을 때는 (), loc[] 받을 때는 []
# 각 행을 판단하면서 값을 도출할 때는 loc[i] 해주어야 함
for i in range(len(dt)):    # 각 행을 판단해서 값을 도출하기 위함
    if (dt['sex'].loc[i] == 'female' and dt['age'].loc[i] < 10):
        dt['fe_fare_mean0'].loc[i] = fema_fare0    # 값 받을 때도 각 행을 판단해서 값 도출
    elif(dt['sex'].loc[i] == 'female' and 10<= dt['age'].loc[i] < 20):
        dt['fe_fare_mean10'].loc[i] = fema_fare10
    elif(dt['sex'].loc[i] == 'female' and 20<= dt['age'].loc[i] < 30):
        dt['fe_fare_mean20'].loc[i] = fema_fare20
    elif(dt['sex'].loc[i] == 'female' and 30<= dt['age'].loc[i] < 40):
        dt['fe_fare_mean30'].loc[i] = fema_fare30
    elif(dt['sex'].loc[i] == 'female' and dt['age'].loc[i] >= 40):
        dt['fe_fare_mean40s'].loc[i] = fema_fare40s

dt

# query는 () 해주어야 한다.
ma_fare0 = dt.query('''sex == "male" and age < 10''')['fare'].mean()
ma_fare0

ma_fare10 = dt.query('''sex == "male" and 10 <= age < 20''')['fare'].mean()
ma_fare10

ma_fare20 = dt.query('''sex == "male" and 20 <= age < 30''')['fare'].mean()
ma_fare20

ma_fare30 = dt.query('''sex == "male" and 30 <= age < 40''')['fare'].mean()
ma_fare30

ma_fare40s = dt.query('''sex == "male" and age >= 40''')['fare'].mean()
ma_fare40s

# query 받을 때는 (), loc[] 받을 때는 []
# 각 행을 판단하면서 값을 도출할 때는 loc[i] 해주어야 함

# for 문 돌릴 때 변수 다르게 설정: j
# 왜 인지는 모르겠는데, 변수 i 로 설정하니까 값이 제대로 도출되지 않음

for j in range(len(dt)):    # 각 행을 판단해서 값을 도출하기 위함
    if (dt['sex'].loc[j] == 'male' and dt['age'].loc[j] < 10):
        dt['ma_fare_mean0'].loc[j] = ma_fare0    # 값 받을 때도 각 행을 판단해서 값 도출
    elif(dt['sex'].loc[j] == 'male' and 10 <= dt['age'].loc[j] < 20):
        dt['ma_fare_mean10'].loc[j] = ma_fare10
    elif(dt['sex'].loc[j] == 'male' and 20 <= dt['age'].loc[j] < 30):
        dt['ma_fare_mean20'].loc[j] = ma_fare20
    elif(dt['sex'].loc[j] == 'male' and 30 <= dt['age'].loc[j] < 40):
        dt['ma_fare_mean30'].loc[j] = ma_fare30
    elif(dt['sex'].loc[j] == 'male' and dt['age'].loc[j] >= 40):
        dt['ma_fare_mean40s'].loc[j] = ma_fare40s

dt

dt[['fe_fare_mean0', 'fe_fare_mean10', 'fe_fare_mean20', 'fe_fare_mean30', 'fe_fare_mean40s',\
    'ma_fare_mean0', 'ma_fare_mean10', 'ma_fare_mean20', 'ma_fare_mean30', 'ma_fare_mean40s']]

